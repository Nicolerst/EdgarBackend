require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe AgencesController do

  def mock_agence(stubs={})
    @mock_agence ||= mock_model(Agence, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all agences as @agences" do
      Agence.stub(:all) { [mock_agence] }
      get :index
      assigns(:agences).should eq([mock_agence])
    end
  end

  describe "GET show" do
    it "assigns the requested agence as @agence" do
      Agence.stub(:find).with("37") { mock_agence }
      get :show, :id => "37"
      assigns(:agence).should be(mock_agence)
    end
  end

  describe "GET new" do
    it "assigns a new agence as @agence" do
      Agence.stub(:new) { mock_agence }
      get :new
      assigns(:agence).should be(mock_agence)
    end
  end

  describe "GET edit" do
    it "assigns the requested agence as @agence" do
      Agence.stub(:find).with("37") { mock_agence }
      get :edit, :id => "37"
      assigns(:agence).should be(mock_agence)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created agence as @agence" do
        Agence.stub(:new).with({'these' => 'params'}) { mock_agence(:save => true) }
        post :create, :agence => {'these' => 'params'}
        assigns(:agence).should be(mock_agence)
      end

      it "redirects to the created agence" do
        Agence.stub(:new) { mock_agence(:save => true) }
        post :create, :agence => {}
        response.should redirect_to(agence_url(mock_agence))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved agence as @agence" do
        Agence.stub(:new).with({'these' => 'params'}) { mock_agence(:save => false) }
        post :create, :agence => {'these' => 'params'}
        assigns(:agence).should be(mock_agence)
      end

      it "re-renders the 'new' template" do
        Agence.stub(:new) { mock_agence(:save => false) }
        post :create, :agence => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested agence" do
        Agence.stub(:find).with("37") { mock_agence }
        mock_agence.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :agence => {'these' => 'params'}
      end

      it "assigns the requested agence as @agence" do
        Agence.stub(:find) { mock_agence(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:agence).should be(mock_agence)
      end

      it "redirects to the agence" do
        Agence.stub(:find) { mock_agence(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(agence_url(mock_agence))
      end
    end

    describe "with invalid params" do
      it "assigns the agence as @agence" do
        Agence.stub(:find) { mock_agence(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:agence).should be(mock_agence)
      end

      it "re-renders the 'edit' template" do
        Agence.stub(:find) { mock_agence(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested agence" do
      Agence.stub(:find).with("37") { mock_agence }
      mock_agence.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the agences list" do
      Agence.stub(:find) { mock_agence }
      delete :destroy, :id => "1"
      response.should redirect_to(agences_url)
    end
  end

end
